name: Deploy to Cloudflare Pages

on:
  push:
    branches: [master]
  workflow_dispatch: {}

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node and install
        uses: ./.github/actions/node-setup

      - name: Run ESLint
        run: npm run lint

  unit-tests:
    name: Unit tests
    needs: lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      PUBLIC_SUPABASE_URL: ${{ secrets.PUBLIC_SUPABASE_URL }}
      PUBLIC_SUPABASE_KEY: ${{ secrets.PUBLIC_SUPABASE_KEY }}
      GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
      GROQ_MODEL: ${{ secrets.GROQ_MODEL }}
      GROQ_BASE_URL: ${{ secrets.GROQ_BASE_URL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node and install
        uses: ./.github/actions/node-setup

      - name: Run unit tests with coverage (Vitest)
        run: npm run test:coverage

      - name: Upload unit coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-coverage
          path: coverage
          retention-days: 7

  deploy:
    name: Deploy to Cloudflare Pages
    needs: [lint, unit-tests]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    env:
      PUBLIC_SUPABASE_URL: ${{ secrets.PUBLIC_SUPABASE_URL }}
      PUBLIC_SUPABASE_KEY: ${{ secrets.PUBLIC_SUPABASE_KEY }}
      SUPABASE_URL: ${{ secrets.PUBLIC_SUPABASE_URL }}
      SUPABASE_KEY: ${{ secrets.PUBLIC_SUPABASE_KEY }}
      GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
      GROQ_MODEL: ${{ secrets.GROQ_MODEL }}
      GROQ_BASE_URL: ${{ secrets.GROQ_BASE_URL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node and install
        uses: ./.github/actions/node-setup

      - name: Build project
        run: npm run build

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy dist --project-name=${{ secrets.CLOUDFLARE_PROJECT_NAME }}

