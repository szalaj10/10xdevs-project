name: Pull Request CI

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  workflow_dispatch: {}

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node and install
        uses: ./.github/actions/node-setup

      - name: Run ESLint
        run: npm run lint

  unit-tests:
    name: Unit tests
    needs: lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node and install
        uses: ./.github/actions/node-setup

      - name: Run unit tests with coverage (Vitest)
        run: npm run test:coverage

      - name: Upload unit coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-coverage
          path: coverage
          retention-days: 7

  e2e-tests:
    name: E2E tests (Playwright)
    needs: lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      # Secrets expected to be configured for PRs
      PUBLIC_SUPABASE_URL: ${{ secrets.PUBLIC_SUPABASE_URL }}
      PUBLIC_SUPABASE_KEY: ${{ secrets.PUBLIC_SUPABASE_KEY }}
      TEST_USER_EMAIL: ${{ secrets.TEST_USER_EMAIL }}
      TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
      GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
      GROQ_MODEL: ${{ secrets.GROQ_MODEL }}
      GROQ_BASE_URL: ${{ secrets.GROQ_BASE_URL }}
      BASE_URL: http://localhost:4321
      NODE_V8_COVERAGE: .v8-coverage
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Check if secrets are configured
        id: check-secrets
        run: |
          if [ -z "$PUBLIC_SUPABASE_URL" ]; then
            echo "configured=false" >> $GITHUB_OUTPUT
            echo "⚠️ Secrets not configured - E2E tests will be skipped"
          else
            echo "configured=true" >> $GITHUB_OUTPUT
            echo "✅ Secrets configured - E2E tests will run"
          fi

      - name: Setup Node and install
        if: steps.check-secrets.outputs.configured == 'true'
        uses: ./.github/actions/node-setup

      - name: Install Playwright browsers (per config)
        if: steps.check-secrets.outputs.configured == 'true'
        run: npx playwright install --with-deps chromium

      - name: Run Playwright tests
        if: steps.check-secrets.outputs.configured == 'true'
        run: npm run test:e2e

      - name: Upload Playwright report
        if: steps.check-secrets.outputs.configured == 'true' && always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          retention-days: 7

      - name: Upload E2E V8 coverage
        if: steps.check-secrets.outputs.configured == 'true' && always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-v8-coverage
          path: .v8-coverage
          retention-days: 7

  status-comment:
    name: Status comment
    needs: [unit-tests, e2e-tests]
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' && always() }}
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Post status comment
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const e2eResult = '${{ needs.e2e-tests.result }}';
            
            let body;
            if (e2eResult === 'success') {
              body = [
                `✅ Lint, unit tests i e2e przeszły pomyślnie.`,
                ``,
                `Artefakty:`,
                `- unit-coverage (Vitest)`,
                `- playwright-report (E2E)`,
                `- e2e-v8-coverage (Node V8 raw)`,
              ].join('\n');
            } else if (e2eResult === 'skipped') {
              body = [
                `✅ Lint i unit tests przeszły pomyślnie.`,
                `⚠️ E2E tests zostały pominięte (brak skonfigurowanych secrets).`,
                ``,
                `Artefakty:`,
                `- unit-coverage (Vitest)`,
                ``,
                `Aby włączyć E2E tests, skonfiguruj GitHub Secrets. Zobacz: GITHUB_SECRETS_SETUP.md`,
              ].join('\n');
            } else {
              body = [
                `❌ Niektóre testy nie przeszły.`,
                ``,
                `Status:`,
                `- Lint: ${{ needs.lint.result }}`,
                `- Unit tests: ${{ needs.unit-tests.result }}`,
                `- E2E tests: ${e2eResult}`,
              ].join('\n');
            }
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              body,
            });

